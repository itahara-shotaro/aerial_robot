can_device.h:28:7:void CANDevice::sendMessage(uint8_t, uint8_t, uint32_t, uint8_t*, uint32_t)	32	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
can_motor.h:24:11:uint16_t CANMotor::getPwm() const	16	static
can_motor.cpp:10:6:virtual void CANMotor::sendData()	16	static
can_motor.cpp:17:6:virtual void CANMotor::receiveDataCallback(uint8_t, uint8_t, uint32_t, uint8_t*)	24	static
can_motor.cpp:27:15:CANMotorSendDevice::sendData()::<lambda()>	16	static
can_motor.cpp:22:6:virtual void CANMotorSendDevice::sendData()	80	static
can_motor.cpp:58:6:virtual void CANMotorSendDevice::receiveDataCallback(uint8_t, uint8_t, uint32_t, uint8_t*)	24	static
stl_vector.h:915:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::reference_wrapper<CANMotor>; _Alloc = std::allocator<std::reference_wrapper<CANMotor> >]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = int]	16	static
stl_vector.h:1089:7:std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::reference_wrapper<CANMotor>; _Alloc = std::allocator<std::reference_wrapper<CANMotor> >]	16	static
refwrap.h:329:7:_Tp& std::reference_wrapper<_Tp>::get() const [with _Tp = CANMotor]	16	static
stl_vector.h:1067:7:void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = std::reference_wrapper<CANMotor>; _Alloc = std::allocator<std::reference_wrapper<CANMotor> >]	16	static
stl_vector.h:1040:7:std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::reference_wrapper<CANMotor>; _Alloc = std::allocator<std::reference_wrapper<CANMotor> >]	16	static
